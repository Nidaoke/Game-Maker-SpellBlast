<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy05</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_bad_touch</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp=15 move_speed=-3.5 fire_delay=0
image_xscale=0.9 image_yscale=0.9
image_speed=0 runup=70

Xmove=0 Ymove=0 shots=1 cycle=0
moveXamt=0 moveYamt=0
 
Xmove=choose(-2,2)
Ymove=choose(-2,2)
attackCLOCK=room_speed*1.5 attack_phase=1
anim_speed=30 anim_time=0 anim_frame=0 anim_cycle=1
start_frame=0 end_frame=2

//set idle animation state.
anim_speed=20 anim_time=0 start_frame=0 end_frame=3
anim_cycle=1 anim_frame=start_frame attack_phase=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var con=obj_gameplay_manager, skip=0;

if con.game_paused=1 {return 0}

if fire_delay&gt;0 {fire_delay--}
if runup&gt;0 {runup-- x+=(move_speed*2) return 0}

if x&lt;-(room_width/10) {instance_destroy()}

x+=Xmove moveXamt++
y+=Ymove moveYamt++
if moveXamt&gt;400 {moveXamt=0 Xmove*=-1}
if moveYamt&gt;200 {moveYamt=0 Ymove*=-1}

if attackCLOCK&gt;0 {attackCLOCK--}

//animate the enemy.
//anim_speed=0 anim_time=0 anim_frame=0 anim_cycle=0
//first, check how much time to advance the frame time.
anim_time+=findpercentvalue(room_speed,anim_speed)
//if we reached the end of an animation frame.
if anim_time&gt;=round(room_speed*1.6)
{
  //if we HAVE NOT reached the end of the animation.
  if anim_frame!=end_frame {anim_time=0 anim_frame+=anim_cycle skip=1}
  //if we HAVE reached the end of the animation.  
  if anim_frame=end_frame and skip=0
  {      
    anim_time=0 anim_frame=start_frame
    
     switch (attack_phase)
     {
       case 2:
           anim_speed=20 anim_time=0 start_frame=0 end_frame=3
           anim_frame=start_frame anim_cycle=1 attack_phase=1
       break;
       
       case 3:
          attackCLOCK=0 fire_delay=0 cycle++
          if cycle&gt;1 {cycle=0}
          if cycle=0 {shots=1}
          if cycle=1 {shots=2}
          anim_speed=20 anim_time=0 start_frame=12 end_frame=9
          anim_frame=start_frame anim_cycle=-1 attack_phase=1
       break;
    }
  }
}
    
     switch (attack_phase)
     {
          case 1:
             if attackCLOCK=0 and fire_delay=0 
             {
               if shots&gt;0
                 {
                    //set attack animation state.
                    anim_speed=20 anim_time=0 start_frame=8 end_frame=12
                    anim_frame=start_frame anim_cycle=1 attack_phase=2 
                 }
                if shots=0
                  {
                     shots=2
                     anim_speed=10 anim_time=0 start_frame=4 end_frame=8
                     anim_frame=start_frame anim_cycle=1 attack_phase=3             
                  }
              }
          
          break;
          case 2:      
          if anim_frame=10 and fire_delay=0
           {
             fire_delay=round(room_speed) shots--
             //fire bullet.
             var mst=instance_create(x,y,obj_enemy05_bullet)
             with mst
             {
                anim_type=0
                anim_speed=20 anim_time=0 start_frame=0 end_frame=0
                anim_cycle=1 anim_frame=start_frame
             }
             var mst=instance_create(x,y,obj_enemy05_bullet)
             with mst
             {
                anim_type=1
                anim_speed=20 anim_time=0 start_frame=1 end_frame=2
                anim_cycle=1 anim_frame=start_frame
             }
           }
          break;
          case 3:
  
          break;  
    }

image_index=anim_frame

if x&lt;900 {x=900}
if x&gt;room_width-260 {x=room_width-260}

if y&lt;140 {y=140}
if y&gt;760 {y=760}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_pbullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var vfxm=VFX_Manager;

if runup&gt;6 {return 0}
hp-- score++

PlaySFX("player shot impact")
with (other) 
{
  //generate player projectile hitsparks.
  part_particles_create(global.Psystem, x, y, vfxm.particle_hitspark1, 10);
  part_particles_create(global.Psystem, x, y, vfxm.particle_hitspark2, 1);
  instance_destroy()
}

if hp&lt;=0
{
  score+=28
  PlaySFX("minion explode")
  ShakeCamera(13)
  //generate jellyfish death hitsparks.
  part_particles_create(global.Psystem, x+50, y+30, vfxm.prt_jelly_splat, 10);
  part_particles_create(global.Psystem, x+50, y+30, vfxm.prt_jelly_spurt, 20);
  part_particles_create(global.Psystem, x+50, y+30, vfxm.prt_jelly_ring2, 1);
  
 instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
