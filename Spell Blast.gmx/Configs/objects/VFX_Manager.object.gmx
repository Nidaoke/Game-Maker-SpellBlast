<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//set up the particle system.
global.Psystem = part_system_create();
part_system_depth(global.Psystem, -1);

global.STARFIELDsystem = part_system_create();
part_system_depth(global.STARFIELDsystem, 1);

//for letter destruction.
//hitspark particle sprite+parameters.
particle_hitspark1 = part_type_create();
part_type_sprite(particle_hitspark1,Particle_Spark_4,0,0,0);
part_type_size(particle_hitspark1,0.10,0.10,0.03,0);
part_type_scale(particle_hitspark1,1,1);
part_type_color1(particle_hitspark1,16777215);
part_type_alpha3(particle_hitspark1,1,0.50,0);
part_type_speed(particle_hitspark1,0.10,0.10,0,0);
part_type_direction(particle_hitspark1,0,359,0,0);
part_type_gravity(particle_hitspark1,0,270);
part_type_orientation(particle_hitspark1,0,0,0,0,1);
part_type_blend(particle_hitspark1,1);
part_type_life(particle_hitspark1,20,20);

//explosion hitspark ring particle sprite+parameters.
particle_hitspark2 = part_type_create();
part_type_sprite(particle_hitspark2,Particle_ExplosionWave_3,0,0,0);
part_type_size(particle_hitspark2,0.01,0.01,0.02,0);
part_type_scale(particle_hitspark2,1,1);
part_type_color1(particle_hitspark2,16777215);
part_type_alpha1(particle_hitspark2,1);
part_type_speed(particle_hitspark2,0.01,0.01,0,0);
part_type_direction(particle_hitspark2,0,359,0,0);
part_type_gravity(particle_hitspark2,0,270);
part_type_orientation(particle_hitspark2,0,0,0,0,1);
part_type_blend(particle_hitspark2,1);
part_type_life(particle_hitspark2,20,20);

//emitter for the hitspark.
/*
global.emitter_hitspark1 = part_emitter_create(global.Psystem);
part_emitter_region(global.Psystem,emitter1,x,x,y,y,0,0);
part_emitter_stream(global.Psystem,emitter1,particle1,20);
*/

/*
for starfield effect.
*/
prt_starfield = part_type_create();
part_type_sprite(prt_starfield,spr_light_line,0,0,0);
part_type_size(prt_starfield,0.10,0.03,0,0);
part_type_scale(prt_starfield,1,1);
part_type_color1(prt_starfield,16777215);
part_type_alpha3(prt_starfield,1,0.7,0.1);
part_type_speed(prt_starfield,4,25,0,0);
part_type_direction(prt_starfield,180,180,0,0);
part_type_gravity(prt_starfield,0,0);
part_type_orientation(prt_starfield,0,0,0,0,1);
part_type_blend(prt_starfield,1);
part_type_life(prt_starfield,55,130);

/*
==============
for asteroid poof explosion
==============
*/
//for asteroid poof particle.
prt_asteroid_poof = part_type_create();
part_type_sprite(prt_asteroid_poof,spr_asteroid_poof,0,0,0);
part_type_size(prt_asteroid_poof,0.10,0.10,0.01,0);
part_type_scale(prt_asteroid_poof,1,1);
part_type_color1(prt_asteroid_poof,5269372);
part_type_alpha3(prt_asteroid_poof,1,1,0);
part_type_speed(prt_asteroid_poof,0,3,-0.10,0);
part_type_direction(prt_asteroid_poof,0,359,0,0);
part_type_gravity(prt_asteroid_poof,0,0);
part_type_orientation(prt_asteroid_poof,0,359,0,0,1);
part_type_blend(prt_asteroid_poof,1);
part_type_life(prt_asteroid_poof,50,30);

/*
==============
for boss death explosion
==============
*/
// for boss splat effect.
prt_boss_splat=part_type_create();
part_type_sprite(prt_boss_splat,spr_boss_splat,0,0,0);
part_type_size(prt_boss_splat,0.10,0.10,0.02,0);
part_type_scale(prt_boss_splat,1,1);
part_type_color1(prt_boss_splat,16777215);
part_type_alpha3(prt_boss_splat,1,1,0.10);
part_type_speed(prt_boss_splat,0,0.50,0,0);
part_type_direction(prt_boss_splat,0,359,0,0);
part_type_gravity(prt_boss_splat,0,270);
part_type_orientation(prt_boss_splat,0,359,0,0,0);
part_type_blend(prt_boss_splat,1);
part_type_life(prt_boss_splat,30,30);

//for boos sploosh effect.
prt_boss_sploosh = part_type_create();
part_type_sprite(prt_boss_sploosh,spr_boss_sploosh,0,0,0);
part_type_size(prt_boss_sploosh,0.40,0.10,-0.01,0);
part_type_scale(prt_boss_sploosh,1,1);
part_type_color1(prt_boss_sploosh,16777215);
part_type_alpha1(prt_boss_sploosh,1);
part_type_speed(prt_boss_sploosh,1,10,0,0);
part_type_direction(prt_boss_sploosh,0,359,0,0);
part_type_gravity(prt_boss_sploosh,0.10,270);
part_type_orientation(prt_boss_sploosh,0,0,0,0,1);
part_type_blend(prt_boss_sploosh,1);
part_type_life(prt_boss_sploosh,60,60);

//for jelly ring effect. this is to be used for the boss explosion too.
prt_jelly_ring = part_type_create();
part_type_sprite(prt_jelly_ring,spr_jelly_ring,0,0,0);
part_type_size(prt_jelly_ring,0.01,0.01,0.10,0);
part_type_scale(prt_jelly_ring,1,1);
part_type_color1(prt_jelly_ring,32768);
part_type_alpha3(prt_jelly_ring,1,0.50,0);
part_type_speed(prt_jelly_ring,1,1,0,0);
part_type_direction(prt_jelly_ring,0,359,0,0);
part_type_gravity(prt_jelly_ring,0,270);
part_type_orientation(prt_jelly_ring,0,359,0,0,1);
part_type_blend(prt_jelly_ring,1);
part_type_life(prt_jelly_ring,20,20);

/*
==============
for jellyfish death explosion
==============
*/
//for jelly splat effect.
prt_jelly_splat = part_type_create();
part_type_sprite(prt_jelly_splat,spr_jelly_splat,0,0,0);
part_type_size(prt_jelly_splat,0.10,0.30,0.02,0);
part_type_scale(prt_jelly_splat,1,1);
part_type_color1(prt_jelly_splat,16777215);
part_type_alpha3(prt_jelly_splat,1,1,0);
part_type_speed(prt_jelly_splat,0,1,0,0);
part_type_direction(prt_jelly_splat,0,359,0,0);
part_type_gravity(prt_jelly_splat,0,0);
part_type_orientation(prt_jelly_splat,0,359,0,0,1);
part_type_blend(prt_jelly_splat,1);
part_type_life(prt_jelly_splat,20,30);

//for jelly spurt effect.
prt_jelly_spurt = part_type_create();
part_type_sprite(prt_jelly_spurt,spr_jelly_spurt,0,0,0);
part_type_size(prt_jelly_spurt,0.10,0.50,-0.01,0);
part_type_scale(prt_jelly_spurt,1,1);
part_type_color1(prt_jelly_spurt,16777215);
part_type_alpha1(prt_jelly_spurt,1);
part_type_speed(prt_jelly_spurt,3,5,0,0);
part_type_direction(prt_jelly_spurt,0,359,0,0);
part_type_gravity(prt_jelly_spurt,0.10,270);
part_type_orientation(prt_jelly_spurt,0,0,0,0,1);
part_type_blend(prt_jelly_spurt,1);
part_type_life(prt_jelly_spurt,60,60);

//the jelly ring effect for the jellyfish explosion.
prt_jelly_ring2 = part_type_create();
part_type_sprite(prt_jelly_ring2,spr_jelly_ring,0,0,0);
part_type_size(prt_jelly_ring2,0.02,0.02,0.06,0);
part_type_scale(prt_jelly_ring2,1,1);
part_type_color1(prt_jelly_ring2,16777215);
part_type_alpha3(prt_jelly_ring2,1,0.50,0);
part_type_speed(prt_jelly_ring2,0,0,0,0);
part_type_direction(prt_jelly_ring2,0,0,0,0);
part_type_gravity(prt_jelly_ring2,0,270);
part_type_orientation(prt_jelly_ring2,0,0,0,0,1);
part_type_blend(prt_jelly_ring2,1);
part_type_life(prt_jelly_ring2,20,20);

/*
==============
for one eye vomitron death explosion
==============
*/
//for green splat effect.
prt_green_splat = part_type_create();
part_type_sprite(prt_green_splat,spr_green_splat,0,0,0);
part_type_size(prt_green_splat,0.10,0.10,0.01,0);
part_type_scale(prt_green_splat,1,1);
part_type_color1(prt_green_splat,3361347);
part_type_alpha3(prt_green_splat,1,0.70,0);
part_type_speed(prt_green_splat,1,3,0,0);
part_type_direction(prt_green_splat,0,359,0,0);
part_type_gravity(prt_green_splat,0,0);
part_type_orientation(prt_green_splat,0,359,0,0,1);
part_type_blend(prt_green_splat,1);
part_type_life(prt_green_splat,20,30);

//for green spray effect.
prt_green_spray= part_type_create();
part_type_sprite(prt_green_spray,spr_green_spray,0,0,0);
part_type_size(prt_green_spray,0.10,0.50,-0.01,0);
part_type_scale(prt_green_spray,1,1);
part_type_color1(prt_green_spray,4227200);
part_type_alpha1(prt_green_spray,1);
part_type_speed(prt_green_spray,3,5,0,0);
part_type_direction(prt_green_spray,0,359,0,0);
part_type_gravity(prt_green_spray,0.10,270);
part_type_orientation(prt_green_spray,0,0,0,0,1);
part_type_blend(prt_green_spray,1);
part_type_life(prt_green_spray,60,60);

//===================
//for player thrusters
//==================
prt_player_thrusters = part_type_create();
part_type_sprite(prt_player_thrusters,spr_player_death_pool,0,0,0);
part_type_size(prt_player_thrusters,0.10,0.10,0.00,0);
part_type_scale(prt_player_thrusters,1,1);
part_type_color3(prt_player_thrusters,16777215,8404992,255);
part_type_alpha1(prt_player_thrusters,1);
part_type_speed(prt_player_thrusters,1,2,0,0);
part_type_direction(prt_player_thrusters,180,180,0,0);
part_type_gravity(prt_player_thrusters,0,270);
part_type_orientation(prt_player_thrusters,0,359,0.10,0,1);
part_type_blend(prt_player_thrusters,1);
part_type_life(prt_player_thrusters,40,40);

emt_player_thrusters = part_emitter_create(global.Psystem);

/*
==============
for player death explosion
==============
*/
//for plr death ring effect.
prt_player_death_ring=part_type_create();
part_type_sprite(prt_player_death_ring,spr_player_death_ring,0,0,0);
part_type_size(prt_player_death_ring,0.10,0.10,0.04,0);
part_type_scale(prt_player_death_ring,1,1);
part_type_color1(prt_player_death_ring,16777215);
part_type_alpha3(prt_player_death_ring,1,0.50,0);
part_type_speed(prt_player_death_ring,0,0,0,0);
part_type_direction(prt_player_death_ring,0,359,20,0);
part_type_gravity(prt_player_death_ring,0,0);
part_type_orientation(prt_player_death_ring,0,359,0,0,1);
part_type_blend(prt_player_death_ring,1);
part_type_life(prt_player_death_ring,30,20);

//for particle explosion wave effect.
prt_player_exp_wave = part_type_create();
part_type_sprite(prt_player_exp_wave,Particle_ExplosionWave_3,0,0,0);
part_type_size(prt_player_exp_wave,0.20,0.20,0.02,0);
part_type_scale(prt_player_exp_wave,1,1);
part_type_color1(prt_player_exp_wave,16777215);
part_type_alpha3(prt_player_exp_wave,1,1,0);
part_type_speed(prt_player_exp_wave,0,0,0,0);
part_type_direction(prt_player_exp_wave,0,359,20,0);
part_type_gravity(prt_player_exp_wave,0,0);
part_type_orientation(prt_player_exp_wave,0,359,0,0,1);
part_type_blend(prt_player_exp_wave,1);
part_type_life(prt_player_exp_wave,30,20);

//for plr death pool effect.
prt_player_death_poof = part_type_create();
part_type_sprite(prt_player_death_poof,spr_player_death_pool,0,0,0);
part_type_size(prt_player_death_poof,0.10,0.10,0.04,0);
part_type_scale(prt_player_death_poof,1,1);
part_type_color1(prt_player_death_poof,16777215);
part_type_alpha3(prt_player_death_poof,1,1,0);
part_type_speed(prt_player_death_poof,0,0,0,0);
part_type_direction(prt_player_death_poof,0,359,0,0);
part_type_gravity(prt_player_death_poof,0,270);
part_type_orientation(prt_player_death_poof,0,359,0,0,1);
part_type_blend(prt_player_death_poof,1);
part_type_life(prt_player_death_poof,5,35);

/*
==============
for player projectile impact burst explosion
==============
*/
//for the particle spark effect, use particle_hitspark1.
//for the ring effect, use particle_hitspark2.

//==================
//for player projectile effect
//==================
prt_player_shot_trail = part_type_create();
part_type_sprite(prt_player_shot_trail,spr_player_death_pool,0,0,0);
part_type_size(prt_player_shot_trail,0.10,0.10,0.00,0);
part_type_scale(prt_player_shot_trail,1,1);
part_type_color3(prt_player_shot_trail,8404992,255,65280);
part_type_alpha3(prt_player_shot_trail,1,1,0);
part_type_speed(prt_player_shot_trail,1,2,0,0);
part_type_direction(prt_player_shot_trail,180,180,0,0);
part_type_gravity(prt_player_shot_trail,0,270);
part_type_orientation(prt_player_shot_trail,0,359,0.10,0,1);
part_type_blend(prt_player_shot_trail,1);
part_type_life(prt_player_shot_trail,10,30);

/*
==============
for player muzzle flash
==============
*/
prt_player_muzzle_flash = part_type_create();
part_type_sprite(prt_player_muzzle_flash,spr_player_muzzle_flash,0,0,0);
part_type_size(prt_player_muzzle_flash,0.4,0.4,0.06,0);
part_type_scale(prt_player_muzzle_flash,1,1);
part_type_color1(prt_player_muzzle_flash,16777215);
part_type_alpha2(prt_player_muzzle_flash,1,0.1);
part_type_speed(prt_player_muzzle_flash,0,0,0,0);
part_type_direction(prt_player_muzzle_flash,0,0,0,0);
part_type_gravity(prt_player_muzzle_flash,0,0);
part_type_orientation(prt_player_muzzle_flash,0,0,0,0,1);
part_type_blend(prt_player_muzzle_flash,1);
part_type_life(prt_player_muzzle_flash,10,10);

/*
==============
for player mega weapon 01
==============
*/
prt_megaweapon01_laser_waves = part_type_create();
part_type_sprite(prt_megaweapon01_laser_waves,spr_mega_weapon_waves,0,0,0);
part_type_size(prt_megaweapon01_laser_waves,0.00,0.00,0.01,0);
part_type_scale(prt_megaweapon01_laser_waves,1,1);
part_type_color1(prt_megaweapon01_laser_waves,16777215);
part_type_alpha3(prt_megaweapon01_laser_waves,1,0.80,0);
part_type_speed(prt_megaweapon01_laser_waves,0,10,0,0);
part_type_direction(prt_megaweapon01_laser_waves,0,0,0,0);
part_type_gravity(prt_megaweapon01_laser_waves,0,270);
part_type_orientation(prt_megaweapon01_laser_waves,0,359,5,0,1);
part_type_blend(prt_megaweapon01_laser_waves,1);
part_type_life(prt_megaweapon01_laser_waves,60,60);

emt_megaweapon01_laser_waves = part_emitter_create(global.Psystem);
/*
part_emitter_region(global.Psystem,emt_megaweapon01_laser_waves,1280,-1280,0,0,ps_shape_line,1);
part_emitter_stream(global.Psystem,emt_megaweapon01_laser_waves,prt_megaweapon01_laser_waves,5);
*/

prt_megaweapon01_spark = part_type_create();
part_type_sprite(prt_megaweapon01_spark,Particle_Spark_4,0,0,0);
part_type_size(prt_megaweapon01_spark,0.10,0.30,0.01,0);
part_type_scale(prt_megaweapon01_spark,1,1);
part_type_color1(prt_megaweapon01_spark,16777215);
part_type_alpha3(prt_megaweapon01_spark,1,0.80,0);
part_type_speed(prt_megaweapon01_spark,0,20,0,0);
part_type_direction(prt_megaweapon01_spark,359,359,0,0);
part_type_gravity(prt_megaweapon01_spark,0,270);
part_type_orientation(prt_megaweapon01_spark,0,0,0,0,1);
part_type_blend(prt_megaweapon01_spark,1);
part_type_life(prt_megaweapon01_spark,60,60);

emt_megaweapon01_spark = part_emitter_create(global.Psystem);
/*
part_emitter_region(global.Psystem,emt_megaweapon01_spark,1280,-1280,0,0,ps_shape_line,1);
part_emitter_stream(global.Psystem,emt_megaweapon01_spark,prt_megaweapon01_spark,10);
*/

prt_megaweapon01_pdp = part_type_create();
part_type_sprite(prt_megaweapon01_pdp,spr_player_death_pool,0,0,0);
part_type_size(prt_megaweapon01_pdp,0.10,0.80,-0.01,0.10);
part_type_scale(prt_megaweapon01_pdp,1,1);
part_type_color1(prt_megaweapon01_pdp,16777215);
part_type_alpha3(prt_megaweapon01_pdp,1,1,0);
part_type_speed(prt_megaweapon01_pdp,0,20,0,0);
part_type_direction(prt_megaweapon01_pdp,0,0,0,0);
part_type_gravity(prt_megaweapon01_pdp,0,270);
part_type_orientation(prt_megaweapon01_pdp,0,359,1,0,1);
part_type_blend(prt_megaweapon01_pdp,1);
part_type_life(prt_megaweapon01_pdp,60,60);

emt_megaweapon01_pdp = part_emitter_create(global.Psystem);
/*
part_emitter_region(global.Psystem,emt_megaweapon01_pdp,x,x,y,y,0,0);
part_emitter_stream(global.Psystem,emt_megaweapon01_pdp,prt_megaweapon01_pdp,5);
*/

//==================
//for boss 1 damaged mouth
//==================
prt_boss01_mouthdmg1 = part_type_create();
part_type_sprite(prt_boss01_mouthdmg1,spr_sploosh3,0,0,0);
part_type_size(prt_boss01_mouthdmg1,0.10,0.30,-0.01,0);
part_type_scale(prt_boss01_mouthdmg1,1,1);
part_type_color1(prt_boss01_mouthdmg1,16777215);
part_type_alpha3(prt_boss01_mouthdmg1,1,1,1);
part_type_speed(prt_boss01_mouthdmg1,1,5,0,0);
part_type_direction(prt_boss01_mouthdmg1,0,359,0,0);
part_type_gravity(prt_boss01_mouthdmg1,0.10,270);
part_type_orientation(prt_boss01_mouthdmg1,0,359,0.10,0,1);
part_type_blend(prt_boss01_mouthdmg1,1);
part_type_life(prt_boss01_mouthdmg1,30,60);
/*
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,0,0,14,-14,ps_shape_ellipse,1);
part_emitter_stream(Sname,emitter1,particle1,80);
*/
prt_boss01_mouthdmg2 = part_type_create();
part_type_sprite(prt_boss01_mouthdmg2,spr_sploosh5,0,0,0);
part_type_size(prt_boss01_mouthdmg2,0.01,0.01,0.02,0);
part_type_scale(prt_boss01_mouthdmg2,1,1);
part_type_color3(prt_boss01_mouthdmg2,8421631,255,255);
part_type_alpha1(prt_boss01_mouthdmg2,1);
part_type_speed(prt_boss01_mouthdmg2,0.10,2,0,0);
part_type_direction(prt_boss01_mouthdmg2,0,359,0,0);
part_type_gravity(prt_boss01_mouthdmg2,0,270);
part_type_orientation(prt_boss01_mouthdmg2,0,359,0,0,1);
part_type_blend(prt_boss01_mouthdmg2,1);
part_type_life(prt_boss01_mouthdmg2,10,30);
/*
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,0,0,14,-14,ps_shape_ellipse,1);
part_emitter_stream(Sname,emitter1,particle2,20);
*/

//==================
//for boss 1 demise
//==================
prt_boss01_demise1 = part_type_create();
part_type_sprite(prt_boss01_demise1,spr_mucky_splat,0,0,0);
part_type_size(prt_boss01_demise1,0.10,1,-0.01,0);
part_type_scale(prt_boss01_demise1,1,1);
part_type_color3(prt_boss01_demise1,8454143,4227327,255);
part_type_alpha3(prt_boss01_demise1,0,1,1);
part_type_speed(prt_boss01_demise1,0.10,10,0,0);
part_type_direction(prt_boss01_demise1,0,359,0,0);
part_type_gravity(prt_boss01_demise1,0.20,270);
part_type_orientation(prt_boss01_demise1,0,359,0.10,0,1);
part_type_blend(prt_boss01_demise1,1);
part_type_life(prt_boss01_demise1,30,80);

/*
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,x,x,y,y,0,0);
part_emitter_stream(Sname,emitter1,particle1,100);
*/

prt_boss01_demise2 = part_type_create();
part_type_sprite(prt_boss01_demise2,spr_boss01_tentacle02,0,0,0);
part_type_size(prt_boss01_demise2,1,1,0,0);
part_type_scale(prt_boss01_demise2,1,1);
part_type_color1(prt_boss01_demise2,16777215);
part_type_alpha3(prt_boss01_demise2,1,1,0);
part_type_speed(prt_boss01_demise2,5,10,0,0);
part_type_direction(prt_boss01_demise2,0,359,0,0);
part_type_gravity(prt_boss01_demise2,0.10,270);
part_type_orientation(prt_boss01_demise2,0,359,1.50,0,1);
part_type_blend(prt_boss01_demise2,1);
part_type_life(prt_boss01_demise2,60,60);
/*
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,x,x,y,y,0,0);
part_emitter_stream(Sname,emitter1,particle2,8);
*/

prt_boss01_demise3 = part_type_create();
part_type_sprite(prt_boss01_demise3,spr_splody,0,0,0);
part_type_size(prt_boss01_demise3,0.10,0.10,0.10,0);
part_type_scale(prt_boss01_demise3,1,1);
part_type_color3(prt_boss01_demise3,128,32896,16512);
part_type_alpha3(prt_boss01_demise3,1,1,0);
part_type_speed(prt_boss01_demise3,0,0,0,0);
part_type_direction(prt_boss01_demise3,0,359,0,0);
part_type_gravity(prt_boss01_demise3,0,270);
part_type_orientation(prt_boss01_demise3,0,359,1,0,1);
part_type_blend(prt_boss01_demise3,1);
part_type_life(prt_boss01_demise3,20,60);
/*
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,x,x,y,y,0,0);
part_emitter_stream(Sname,emitter1,particle3,8);
*/

//==================
//for boss 1 eye damage
//==================
prt_boss01_eyedmg1 = part_type_create();
part_type_sprite(prt_boss01_eyedmg1,spr_mucky_splat,0,0,0);
part_type_size(prt_boss01_eyedmg1,0.10,0.30,-0.01,0);
part_type_scale(prt_boss01_eyedmg1,1,1);
part_type_color3(prt_boss01_eyedmg1,8454143,4227327,255);
part_type_alpha3(prt_boss01_eyedmg1,0,1,1);
part_type_speed(prt_boss01_eyedmg1,0.10,1,0,0);
part_type_direction(prt_boss01_eyedmg1,0,359,0,0);
part_type_gravity(prt_boss01_eyedmg1,0.20,270);
part_type_orientation(prt_boss01_eyedmg1,0,0,0.10,0,1);
part_type_blend(prt_boss01_eyedmg1,1);
part_type_life(prt_boss01_eyedmg1,30,80);
/*
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,0,0,14,-14,ps_shape_ellipse,1);
part_emitter_stream(Sname,emitter1,particle1,1);
*/
//==================
//for boss 1 eye explosion
//==================
prt_boss01_eyedmg2 = part_type_create();
part_type_sprite(prt_boss01_eyedmg2,spr_jelly_spurt,0,0,0);
part_type_size(prt_boss01_eyedmg2,0.10,0.30,-0.01,0);
part_type_scale(prt_boss01_eyedmg2,1,1);
part_type_color3(prt_boss01_eyedmg2,8454143,4227327,255);
part_type_alpha3(prt_boss01_eyedmg2,1,1,1);
part_type_speed(prt_boss01_eyedmg2,1,5,0,0);
part_type_direction(prt_boss01_eyedmg2,0,359,0,0);
part_type_gravity(prt_boss01_eyedmg2,0.10,270);
part_type_orientation(prt_boss01_eyedmg2,0,359,0.10,0,1);
part_type_blend(prt_boss01_eyedmg2,1);
part_type_life(prt_boss01_eyedmg2,30,60);
/*
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,0,0,14,-14,ps_shape_ellipse,1);
part_emitter_stream(Sname,emitter1,particle1,80);
*/
prt_boss01_eyedmg3 = part_type_create();
part_type_sprite(prt_boss01_eyedmg3,spr_mucky_splat,0,0,0);
part_type_size(prt_boss01_eyedmg3,0.01,0.01,0.02,0);
part_type_scale(prt_boss01_eyedmg3,1,1);
part_type_color1(prt_boss01_eyedmg3,32896);
part_type_alpha3(prt_boss01_eyedmg3,1,1,0);
part_type_speed(prt_boss01_eyedmg3,0.10,2,0,0);
part_type_direction(prt_boss01_eyedmg3,0,359,0,0);
part_type_gravity(prt_boss01_eyedmg3,0,270);
part_type_orientation(prt_boss01_eyedmg3,0,359,0,0,1);
part_type_blend(prt_boss01_eyedmg3,1);
part_type_life(prt_boss01_eyedmg3,10,30);
/*
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,0,0,14,-14,ps_shape_ellipse,1);
part_emitter_stream(Sname,emitter1,particle2,50);
*/

//====================
//for boss 2 demise
//====================
prt_boss02_demise1 = part_type_create();
part_type_sprite(prt_boss02_demise1,spr_mucky_splat,0,0,0);
part_type_size(prt_boss02_demise1,0.1,0.17,0.05,0);
part_type_scale(prt_boss02_demise1,1,1);
part_type_color1(prt_boss02_demise1,4806529);
part_type_alpha3(prt_boss02_demise1,0,1,0);
part_type_speed(prt_boss02_demise1,1,2,0,0);
part_type_direction(prt_boss02_demise1,0,359,0,0);
part_type_gravity(prt_boss02_demise1,0,270);
part_type_orientation(prt_boss02_demise1,0,359,0,0,1);
part_type_blend(prt_boss02_demise1,1);
part_type_life(prt_boss02_demise1,10,20);
/*
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,x,x,y,y,0,0);
part_emitter_stream(Sname,emitter1,particle1,50);
*/
prt_boss02_demise2 = part_type_create();
part_type_sprite(prt_boss02_demise2,spr_mucky_splat,0,0,0);
part_type_size(prt_boss02_demise2,0.09,0.19,0.02,0);
part_type_scale(prt_boss02_demise2,1,1);
part_type_color2(prt_boss02_demise2,32896,33023);
part_type_alpha1(prt_boss02_demise2,1);
part_type_speed(prt_boss02_demise2,3,9,0,0);
part_type_direction(prt_boss02_demise2,0,359,0,0);
part_type_gravity(prt_boss02_demise2,0.10,270);
part_type_orientation(prt_boss02_demise2,0,0,0,0,1);
part_type_blend(prt_boss02_demise2,1);
part_type_life(prt_boss02_demise2,30,30);
/*
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,x,x,y,y,0,0);
part_emitter_stream(Sname,emitter1,particle2,200);
*/
//===============
//for boss 2 unicorn emergence
//===============
prt_boss02_birth = part_type_create();
part_type_sprite(prt_boss02_birth,spr_mucky_splat,0,0,0);
part_type_size(prt_boss02_birth,0.18,0.36,0.05,0);
part_type_scale(prt_boss02_birth,1,1);
part_type_color1(prt_boss02_birth,4806529);
part_type_alpha3(prt_boss02_birth,0,1,0);
part_type_speed(prt_boss02_birth,0.10,0.10,0,0);
part_type_direction(prt_boss02_birth,100,270,0,0);
part_type_gravity(prt_boss02_birth,0,270);
part_type_orientation(prt_boss02_birth,180,180,0,0,1);
part_type_blend(prt_boss02_birth,1);
part_type_life(prt_boss02_birth,10,20);
/*
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,-9,9,-58,58,ps_shape_ellipse,1);
part_emitter_stream(Sname,emitter1,particle1,1);
*/

//===============
//for boss 2 laser charge up
//===============
prt_boss02_laser_charge = part_type_create();
part_type_sprite(prt_boss02_laser_charge,spr_splody,0,0,0);
part_type_size(prt_boss02_laser_charge,0.8,0.8,-0.05,0);
part_type_scale(prt_boss02_laser_charge,0.9,0.9);
part_type_color1(prt_boss02_laser_charge,16777215);
part_type_alpha3(prt_boss02_laser_charge,0,1,1);
part_type_speed(prt_boss02_laser_charge,0,0,0,0);
part_type_direction(prt_boss02_laser_charge,0,0,0,0);
part_type_gravity(prt_boss02_laser_charge,0,270);
part_type_orientation(prt_boss02_laser_charge,0,359,10,0,1);
part_type_blend(prt_boss02_laser_charge,1);
part_type_life(prt_boss02_laser_charge,60,60);

/*
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,x,x,y,y,0,0);
part_emitter_stream(Sname,emitter1,particle1,5);
*/







//====================================
/*
PARTICLE TYPES:
pt_shape_pixel:
A 1x1 pixel. (This is the default setting.)

pt_shape_disk:
A filled circle.

pt_shape_square:
A filled square.

pt_shape_line:
An 8px wide horizontal line.

pt_shape_star:
A five-point filled star.

pt_shape_circle:
A 3px outlined circle.

pt_shape_ring:
A circle with an inward glow (looks like a bubble).

pt_shape_sphere:
A circle with an outward glow ' solid in the middle, glowing outwards.

pt_shape_flare:
A harshly glowing point (looks like an actual star in the night).

pt_shape_spark:
A spark effect ' like a star with multiple points fading out.

pt_shape_explosion:
A squarish cloud of smoke ' requires multiple colours to resemble an explosion.

pt_shape_cloud:
A thin cloud, requires up scaling and multiple particles to resemble a cloud.

pt_shape_smoke:
A smooth version of the explosion effect. Use multiple to create a smoke cloud.

pt_shape_snow:
A generic snowflake shape.

PARTICLE PARAMETERS:
set the base size of the particle:
 part_type_size(global.p1, 1, 3, 0, 0);
 set the size of the particle when created:
 part_type_scale(global.p1, 1, 1);
 part_type_colour1(global.p1, c_white);
 part_type_alpha2(global.p1, 1, 0);
 part_type_speed(global.p1, 2, 4, 0, 0);
 part_type_direction(global.p1, 0, 180, 0, 0);
 part_type_gravity(global.p1, 0.20, 270);
 part_type_orientation(global.p1, 0, 0, 0, 0, 1);
 part_type_blend(global.p1, 1);
 part_type_life(global.p1, 15, 60);
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var con=0,rm=room_get_name(room);

if instance_exists(obj_gameplay_manager)=true
{
  con=obj_gameplay_manager
  if rm != "rm_tutorial"
   {          
       if con.game_paused=0
        {
           part_system_automatic_update(global.Psystem,true)
           part_system_automatic_update(global.STARFIELDsystem,true)
        }
       if con.game_paused=1
        {
           part_system_automatic_update(global.Psystem,false)
           part_system_automatic_update(global.STARFIELDsystem,false)
        }
   }
   
   if rm = "rm_tutorial"
   {          
       if con.tutorial_prompt=0
        {
           part_system_automatic_update(global.Psystem,true)
           part_system_automatic_update(global.STARFIELDsystem,true)
        }
        if con.tutorial_prompt=1
        {
           part_system_automatic_update(global.Psystem,false)
           part_system_automatic_update(global.STARFIELDsystem,false)
        }
   }
   
}

x=view_xview[0]+32 y=view_yview[0]+32


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
destroys the VFX Manager's particle system and all
associated particle types to avoid memory leaks.
*/
part_system_destroy(global.Psystem); 
part_system_destroy(global.STARFIELDsystem); 

part_emitter_destroy_all(global.Psystem);

//hitspark for letter destruction.
part_type_destroy(particle_hitspark1); 
part_type_destroy(particle_hitspark2); 
part_type_destroy(prt_asteroid_poof);
part_type_destroy(prt_boss_splat);
part_type_destroy(prt_boss_sploosh);
part_type_destroy(prt_jelly_ring);
part_type_destroy(prt_jelly_splat);
part_type_destroy(prt_jelly_spurt);
part_type_destroy(prt_jelly_ring2);
part_type_destroy(prt_green_splat);
part_type_destroy(prt_green_spray);
part_type_destroy(prt_player_death_ring);
part_type_destroy(prt_player_exp_wave);
part_type_destroy(prt_player_muzzle_flash);
part_type_destroy(prt_player_death_poof);
part_type_destroy(prt_player_shot_trail);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>42,42</point>
  </PhysicsShapePoints>
</object>
